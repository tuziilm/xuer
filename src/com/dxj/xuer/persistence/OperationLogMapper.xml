<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dxj.xuer.persistence.OperationLogMapper" >
    <resultMap id="BaseResultMap" type="com.dxj.xuer.domain.OperationLog" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="user_id" property="userId" jdbcType="INTEGER" />
        <result column="type" property="type" jdbcType="INTEGER" />
        <result column="msg" property="msg" jdbcType="VARCHAR" />
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
        <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
    </resultMap>

    <insert id="insert" parameterType="com.dxj.xuer.domain.OperationLog">
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER">SELECT LAST_INSERT_ID()</selectKey>
        insert into operation_log(
        `user_id`,
        `type`,
        `msg`,
        `gmt_create`)
        values(
        #{userId,jdbcType=INTEGER},
        #{type,jdbcType=INTEGER},
        #{msg,jdbcType=VARCHAR},
        now())
    </insert>
    <sql id="Base_Column_List">
        `id`,
        `user_id`,
        `type`,
        `msg`,
        `gmt_create`,
        `gmt_modified`
    </sql>
    <sql id="select_count_where_sql">
        <where>
            `gmt_create` >= #{query.startTime} and `gmt_create` &lt;= #{query.endTime}
            <if test="fn.notEmpty(query.userId)">
                and user_id= #{query.userId}
            </if>
            <if test="fn.notEmpty(query.type)">
                and type= #{query.type}
            </if>
        </where>
    </sql>
    <select id="count" resultType="java.lang.Integer" parameterType="com.dxj.xuer.common.Paginator" >
        select count(*)
        from operation_log
        <include refid="select_count_where_sql"/>
    </select>
    <select id="select" resultMap="BaseResultMap" parameterType="com.dxj.xuer.common.Paginator" >
        select
        <include refid="Base_Column_List" />
        from operation_log
        <include refid="select_count_where_sql"/>
        order by id desc limit #{start},#{sqlSize}
    </select>
</mapper>